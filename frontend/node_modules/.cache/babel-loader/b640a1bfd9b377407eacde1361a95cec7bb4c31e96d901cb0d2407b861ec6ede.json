{"ast":null,"code":"import _regeneratorRuntime from\"/home/abhinav/ALL PROJECTS/attendancesystemiiitu/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/abhinav/ALL PROJECTS/attendancesystemiiitu/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/abhinav/ALL PROJECTS/attendancesystemiiitu/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState}from\"react\";import{App,Credentials}from\"realm-web\";import{APP_ID}from\"../realm/constants\";// Creating a Realm App Instance\nimport{jsx as _jsx}from\"react/jsx-runtime\";var app=new App(APP_ID);// Creating a user context to manage and access all the user related functions\n// across different components and pages.\nexport var UserContext=/*#__PURE__*/createContext();export var UserProvider=function UserProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];// Function to log in user into our App Service app using their email & password\nvar emailPasswordLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(email,password){var credentials,authenticatedUser;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:credentials=Credentials.emailPassword(email,password);_context.next=3;return app.logIn(credentials);case 3:authenticatedUser=_context.sent;setUser(authenticatedUser);return _context.abrupt(\"return\",authenticatedUser);case 6:case\"end\":return _context.stop();}},_callee);}));return function emailPasswordLogin(_x,_x2){return _ref2.apply(this,arguments);};}();// Function to sign up user into our App Service app using their email & password\nvar emailPasswordSignup=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email,password){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return app.emailPasswordAuth.registerUser(email,password);case 3:return _context2.abrupt(\"return\",emailPasswordLogin(email,password));case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);throw _context2.t0;case 9:case\"end\":return _context2.stop();}},_callee2,null,[[0,6]]);}));return function emailPasswordSignup(_x3,_x4){return _ref3.apply(this,arguments);};}();// Function to fetch the user (if the user is already logged in) from local storage\nvar fetchUser=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(app.currentUser){_context3.next=2;break;}return _context3.abrupt(\"return\",false);case 2:_context3.prev=2;_context3.next=5;return app.currentUser.refreshCustomData();case 5:// Now, if we have a user, we are setting it to our user context\n// so that we can use it in our app across different components.\nsetUser(app.currentUser);return _context3.abrupt(\"return\",app.currentUser);case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](2);throw _context3.t0;case 12:case\"end\":return _context3.stop();}},_callee3,null,[[2,9]]);}));return function fetchUser(){return _ref4.apply(this,arguments);};}();// Function to logout user from our App Services app\nvar logOutUser=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(app.currentUser){_context4.next=2;break;}return _context4.abrupt(\"return\",false);case 2:_context4.prev=2;_context4.next=5;return app.currentUser.logOut();case 5:// Setting the user to null once loggedOut.\nsetUser(null);return _context4.abrupt(\"return\",true);case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](2);throw _context4.t0;case 12:case\"end\":return _context4.stop();}},_callee4,null,[[2,9]]);}));return function logOutUser(){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user:user,setUser:setUser,fetchUser:fetchUser,emailPasswordLogin:emailPasswordLogin,emailPasswordSignup:emailPasswordSignup,logOutUser:logOutUser},children:children});};","map":{"version":3,"names":["createContext","useState","App","Credentials","APP_ID","app","UserContext","UserProvider","children","user","setUser","emailPasswordLogin","email","password","credentials","emailPassword","logIn","authenticatedUser","emailPasswordSignup","emailPasswordAuth","registerUser","fetchUser","currentUser","refreshCustomData","logOutUser","logOut"],"sources":["/home/abhinav/ALL PROJECTS/attendancesystemiiitu/frontend/src/contexts/user.context.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { App, Credentials } from \"realm-web\";\nimport { APP_ID } from \"../realm/constants\";\n \n// Creating a Realm App Instance\nconst app = new App(APP_ID);\n \n// Creating a user context to manage and access all the user related functions\n// across different components and pages.\nexport const UserContext = createContext();\n \nexport const UserProvider = ({ children }) => {\n const [user, setUser] = useState(null);\n \n // Function to log in user into our App Service app using their email & password\n const emailPasswordLogin = async (email, password) => {\n   const credentials = Credentials.emailPassword(email, password);\n   const authenticatedUser = await app.logIn(credentials);\n   setUser(authenticatedUser);\n   return authenticatedUser;\n };\n \n // Function to sign up user into our App Service app using their email & password\n const emailPasswordSignup = async (email, password) => {\n   try {\n     await app.emailPasswordAuth.registerUser(email, password);\n     // Since we are automatically confirming our users, we are going to log in\n     // the user using the same credentials once the signup is complete.\n     return emailPasswordLogin(email, password);\n   } catch (error) {\n     throw error;\n   }\n };\n \n // Function to fetch the user (if the user is already logged in) from local storage\n const fetchUser = async () => {\n   if (!app.currentUser) return false;\n   try {\n     await app.currentUser.refreshCustomData();\n     // Now, if we have a user, we are setting it to our user context\n     // so that we can use it in our app across different components.\n     setUser(app.currentUser);\n     return app.currentUser;\n   } catch (error) {\n     throw error;\n   }\n }\n \n // Function to logout user from our App Services app\n const logOutUser = async () => {\n   if (!app.currentUser) return false;\n   try {\n     await app.currentUser.logOut();\n     // Setting the user to null once loggedOut.\n     setUser(null);\n     return true;\n   } catch (error) {\n     throw error\n   }\n }\n \n return <UserContext.Provider value={{ user, setUser, fetchUser, emailPasswordLogin, emailPasswordSignup, logOutUser }}>\n   {children}\n </UserContext.Provider>;\n}"],"mappings":"6bAAA,OAASA,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,OAASC,GAAG,CAAEC,WAAW,KAAQ,WAAW,CAC5C,OAASC,MAAM,KAAQ,oBAAoB,CAE3C;AAAA,2CACA,GAAMC,IAAG,CAAG,GAAIH,IAAG,CAACE,MAAM,CAAC,CAE3B;AACA;AACA,MAAO,IAAME,YAAW,cAAGN,aAAa,EAAE,CAE1C,MAAO,IAAMO,aAAY,CAAG,QAAfA,aAAY,MAAqB,IAAfC,SAAQ,MAARA,QAAQ,CACtC,cAAwBP,QAAQ,CAAC,IAAI,CAAC,wCAA/BQ,IAAI,eAAEC,OAAO,eAEpB;AACA,GAAMC,mBAAkB,6FAAG,iBAAOC,KAAK,CAAEC,QAAQ,qJACzCC,WAAW,CAAGX,WAAW,CAACY,aAAa,CAACH,KAAK,CAAEC,QAAQ,CAAC,uBAC9BR,IAAG,CAACW,KAAK,CAACF,WAAW,CAAC,QAAhDG,iBAAiB,eACvBP,OAAO,CAACO,iBAAiB,CAAC,CAAC,gCACpBA,iBAAiB,uDACzB,kBALKN,mBAAkB,iDAKvB,CAED;AACA,GAAMO,oBAAmB,6FAAG,kBAAON,KAAK,CAAEC,QAAQ,+JAExCR,IAAG,CAACc,iBAAiB,CAACC,YAAY,CAACR,KAAK,CAAEC,QAAQ,CAAC,yCAGlDF,kBAAkB,CAACC,KAAK,CAAEC,QAAQ,CAAC,oJAI7C,kBATKK,oBAAmB,kDASxB,CAED;AACA,GAAMG,UAAS,6FAAG,4IACXhB,GAAG,CAACiB,WAAW,2DAAS,KAAK,iDAE1BjB,IAAG,CAACiB,WAAW,CAACC,iBAAiB,EAAE,QACzC;AACA;AACAb,OAAO,CAACL,GAAG,CAACiB,WAAW,CAAC,CAAC,iCAClBjB,GAAG,CAACiB,WAAW,qJAIzB,kBAXKD,UAAS,2CAWd,CAED;AACA,GAAMG,WAAU,6FAAG,4IACZnB,GAAG,CAACiB,WAAW,2DAAS,KAAK,iDAE1BjB,IAAG,CAACiB,WAAW,CAACG,MAAM,EAAE,QAC9B;AACAf,OAAO,CAAC,IAAI,CAAC,CAAC,iCACP,IAAI,qJAId,kBAVKc,WAAU,2CAUf,CAED,mBAAO,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAE,CAAEf,IAAI,CAAJA,IAAI,CAAEC,OAAO,CAAPA,OAAO,CAAEW,SAAS,CAATA,SAAS,CAAEV,kBAAkB,CAAlBA,kBAAkB,CAAEO,mBAAmB,CAAnBA,mBAAmB,CAAEM,UAAU,CAAVA,UAAW,CAAE,UACnHhB,QAAQ,EACY,CACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}